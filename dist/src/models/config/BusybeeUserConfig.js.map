{"version":3,"file":"BusybeeUserConfig.js","sourceRoot":"","sources":["../../../../src/models/config/BusybeeUserConfig.ts"],"names":[],"mappings":";;AAEA;;;;;;;;;;;GAWG;AACH;IAoBE;QACE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAA;IACzB,CAAC;IACH,wBAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,8CAAiB","sourcesContent":["import {TestSuiteConfig} from \"./user/TestSuiteConfig\";\r\nimport {EnvResourceConfig} from \"./common/EnvResourceConfig\";\r\n/**\r\n * Busybee Configuration. Mapped to Typescript from user-provided config.js/json. The top-level\r\n * of configuration, the fields in the BusybeeUserConfig are responsible for defining the resources available\r\n * for environment provisioning, TestSuites that will be run with-in environments and registering reporters for result analysis\r\n *\r\n * {<br>\r\n *   envResources: EnvResourceConfig[],<br>\r\n *   onComplete: 'onComplete.js',<br>\r\n *   testSuites: TestSuiteConfig[],<br>\r\n *   reporters: []<br>\r\n * }\r\n */\r\nexport class BusybeeUserConfig {\r\n  /**\r\n   * Describes the available resources that environments can be deployed to\r\n   */\r\n  envResources: EnvResourceConfig[];\r\n  /**\r\n   * The name of a .js file to call on completion of all Test Suites.\r\n   * Must export a single function with the signature (errors, results).\r\n   */\r\n  onComplete: string;\r\n  /**\r\n   * <span style=\"color:red\">**Required**</span> <br>\r\n   * A collection of TestSuites to run via `busybee test`\r\n   */\r\n  testSuites: TestSuiteConfig[];\r\n  /**\r\n   * A collection of reporters that will be called at the completion of a TestSuite\r\n   */\r\n  reporters: Array<any>;\r\n\r\n  constructor() {\r\n    this.envResources = void 0;\r\n    this.onComplete = void 0;\r\n    this.testSuites = void 0;\r\n    this.reporters = void 0\r\n  }\r\n}\r\n"]}