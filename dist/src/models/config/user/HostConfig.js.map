{"version":3,"file":"HostConfig.js","sourceRoot":"","sources":["../../../../../src/models/config/user/HostConfig.ts"],"names":[],"mappings":";;AAAA;;;;;;;GAOG;AACH;IAgBE;QACE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;IACzB,CAAC;IACH,iBAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,gCAAU","sourcesContent":["/**\r\n * Properties of an available host that test environments can be deployed to\r\n *\r\n * {<br>\r\n * &nbsp; name: 'localhost',<br>\r\n * &nbsp; capacity: 200<br>\r\n * }\r\n */\r\nexport class HostConfig {\r\n  /**\r\n   * **Example** `localhost`\r\n   * hostname of an available resource\r\n   */\r\n  name: string;\r\n  /**\r\n   * **Default* `100` <br>\r\n   * **Allowed** A number between `0` and `100` <br>\r\n   * A crude measurement of the total resources available at this host.\r\n   * Supplied with a value of `100`, a TestSuite.env with a resourceCost of 50 would be able to run 2 instances on this host simultaneously.\r\n   * When an instance of a Test Suite is added to a host its resourceCost is added to the load of that host.\r\n   * If an instance's (resourceCost + host.currentLoad) > capacity then the instance will wait until instances are removed from the host.\r\n   */\r\n  capacity: string;\r\n\r\n  constructor() {\r\n    this.name = void 0;\r\n    this.capacity = void 0;\r\n  }\r\n}\r\n"]}