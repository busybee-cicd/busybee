{"version":3,"file":"RESTTest.js","sourceRoot":"","sources":["../../../src/models/RESTTest.ts"],"names":[],"mappings":";;AAAA,uEAAoE;AACpE,iEAAmD;AACnD,+CAA4C;AAC5C,mDAAgD;AAChD,6CAA0C;AAE1C,0BAA4B;AAE5B;IAWE,kBAAY,IAAS;QACnB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,EAAE,IAAO,MAAM,CAAC,IAAI,yBAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,yBAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxI,CAAC;QACD,IAAI,CAAC,OAAO,GAAG,oCAAW,CAAC,qCAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,+BAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,oCAAW,CAAC,2BAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACjE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC;IACpD,CAAC;IACH,eAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,4BAAQ","sourcesContent":["import {RequestOptsConfig} from \"./config/common/RequestOptsConfig\";\r\nimport {deserialize} from 'json-typescript-mapper';\r\nimport {ResponseBody} from \"./ResponseBody\";\r\nimport {RESTTestExpect} from \"./RESTTestExpect\";\r\nimport {RESTTestSet} from './RESTTestSet';\r\n\r\nimport * as _ from 'lodash';\r\n\r\nexport class RESTTest {\r\n  id: string;\r\n  description: string;\r\n  testSet: Array<RESTTestSet> | RESTTestSet;\r\n  request: RequestOptsConfig;\r\n  expect: RESTTestExpect;\r\n  skip: boolean;\r\n  mockResponse: ResponseBody;\r\n  delayTestRequest: number;\r\n  delayMockedResponse: number;\r\n\r\n  constructor(data: any) {\r\n    this.id = data.id;\r\n    this.description = data.description;\r\n    if (data.testSet) {\r\n      this.testSet = _.isArray(data.testSet) ? _.map(data.testSet, (ts) => { return new RESTTestSet(ts); }) : new RESTTestSet(data.testSet);\r\n    }\r\n    this.request = deserialize(RequestOptsConfig, data.request);\r\n    if (data.expect) {\r\n      this.expect = new RESTTestExpect(data.expect);\r\n    }\r\n    this.skip = data.skip;\r\n    this.mockResponse = deserialize(ResponseBody, data.mockResponse);\r\n    this.delayTestRequest = data.delayTestRequest;\r\n    this.delayMockedResponse = data.mockResponseDelay;\r\n  }\r\n}\r\n"]}