{"version":3,"file":"RESTClient.js","sourceRoot":"","sources":["../../src/lib/RESTClient.ts"],"names":[],"mappings":"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","sourcesContent":["import * as request from 'request';\nimport * as _ from 'lodash';\nimport {Logger} from './Logger';\n\nexport class RESTClient {\n\n  conf: any;\n  suiteEnvConf: any;\n  apiRequest: any;\n  private logger: any;\n\n  constructor(conf: any, suiteEnvConf: any) {\n    this.conf = conf;\n    this.suiteEnvConf = suiteEnvConf;\n    this.logger = new Logger(conf, this);\n    this.apiRequest = request;\n    if (suiteEnvConf.defaultRequestOpts)\n      this.apiRequest = request.defaults(suiteEnvConf.defaultRequestOpts);\n\n    if (conf.debug) {\n      this.apiRequest.debug = true;\n    }\n  }\n\n  buildBaseUrl(requestConf, port) {\n    this.logger.debug('buildBaseUrl');\n    let protocol = this.suiteEnvConf.protocol;\n    let hostName = this.suiteEnvConf.hostName;\n\n    let url = `${protocol}://${hostName}`;\n    if (port) {\n      url += `:${port}`;\n    }\n\n    if (!_.isUndefined(requestConf.root)) {\n      // allow override of root from requestConf\n      if (requestConf.root != null) {\n        url += requestConf.root;\n      }\n    }\n    else if (this.suiteEnvConf.root) {\n      // else use root from resApi conf\n      url += this.suiteEnvConf.root;\n    }\n\n    return url;\n  }\n\n  buildRequest(requestConf, port) {\n    this.logger.debug(`buildRequestUrl <requestConf> ${port}`);\n    this.logger.debug(requestConf);\n\n    let url = this.buildBaseUrl(requestConf, port);\n    if (requestConf.endpoint) {\n      if (requestConf.endpoint.startsWith(\"/\")) {\n        url += requestConf.endpoint;\n      } else {\n        url += `/${requestConf.endpoint}`;\n      }\n    }\n\n    let req = {\n      method: requestConf.method,\n      url: url,\n      qs: requestConf.query,\n      headers: requestConf.headers,\n      body: requestConf.body,\n      timeout: requestConf.timeout || 30000 // default 30 seconds\n    };\n\n    return req;\n  }\n\n  makeRequest(opts, cb) {\n    // run the test\n    this.logger.debug('Request opts');\n    this.logger.debug(opts);\n    this.apiRequest(opts, cb);\n  }\n}\n"]}